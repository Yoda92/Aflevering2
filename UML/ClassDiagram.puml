@startuml
hide circle
skinparam classAttributeIconSize 0

interface IDoor <<interface>> {
    + DoorStateChangedEvent: event
    + LockDoor(): void
    + UnlockDoor(): void
}

class DoorSimulator {
    - _lockedState: bool
    + DoorStateChangedEvent: event
    + SetDoorState(open: bool): void
    + LockDoor(): void
    + UnlockDoor(): void
    - OnDoorStateChanged(\n  e: DoorStateEventArgs): void
}

class DoorStateEventArgs {
    + Open: bool
}

interface IRFIDReader <<interface>>{
    + RFIDReadEvent: event
}

class RFIDReaderSimulator {
    + RFIDReadEvent: event
    + ReadRFID(int: ID): void
    - OnRFIDRead(\n  e: RFIDReadEventArgs): void
}

class RFIDReadEventArgs {
    + ID: int
}

class StationControl {
    - _oldID: int
    - _state: LadeskabState
    - HandleDoorStateChanged(\n  s: Object\n  e: DoorStateEventArgs)
    - HandleRFIDRead(\n  s: Object\n  e: DoorStateEventArgs)
    - CheckID(newID: int): bool
}

enum LadeskabState <<enum>>{
    Available
    DoorOpen
    Locked
}

interface IUSBCharger <<interface>>{
    + CurrentValueEvent: event
    + StartCharge(): void
    + StopCharge(): void
    -/+ Connected: bool
}

class CurrentValueEventArgs {
    + Current: double
}


class USBChargerSimulator {
    + CurrentValueEvent: event
    + StartCharge(): void
    + StopCharge(): void
    - OnCurrentValueChanged(\n  e: CurrentValueEventArgs): void
    -/+ Connected: bool
}

interface IChargeControl <<interface>>{
    + IsConnected(): bool
    + StartCharge(): void
    + StopCharge(): void
}

class ChargeControl {
    + IsConnected(): bool
    + StartCharge(): void
    + StopCharge(): void
    - HandleCurrentValueChanged(\n  s: Object\n  e: CurrentValueEventArgs)
}

interface IDisplay <<interface>>{
    + DisplayUserInstructions(s: string): void
    + DisplayChargingMessage(s: string): void
}

class Display {
    + DisplayUserInstructions(s: string): void
    + DisplayChargingMessage(s: string): void
}

interface ILogFile <<interface>>{
    + LogDoorLocked(ID: int)
    + LogDoorUnlocked(ID: int)
}

class LogFile {
    + LogDoorLocked(ID: int)
    + LogDoorUnlocked(ID: int)
}


DoorSimulator .up.|> IDoor
StationControl --> IDoor
RFIDReaderSimulator .up.|> IRFIDReader
RFIDReaderSimulator ..> RFIDReadEventArgs
IRFIDReader ..> RFIDReadEventArgs
StationControl ..> IRFIDReader
USBChargerSimulator .up.|> IUSBCharger
USBChargerSimulator ..> CurrentValueEventArgs
IUSBCharger ..> CurrentValueEventArgs
ChargeControl ..> IUSBCharger
StationControl --> IChargeControl
ChargeControl .up.|> IChargeControl
LogFile .up.|> ILogFile
StationControl --> ILogFile
Display .up.|> IDisplay
StationControl --> IDisplay
ChargeControl --> IDisplay 
StationControl --> LadeskabState
StationControl ..> RFIDReadEventArgs
StationControl ..> DoorStateEventArgs
IDoor ..> DoorStateEventArgs
DoorSimulator ..> DoorStateEventArgs
ChargeControl ..> CurrentValueEventArgs
@enduml