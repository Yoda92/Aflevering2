@startuml

interface IDoor {
    + DoorStateChangedEvent: event
    + SetDoorLocked(locked: boolean): void
}

class Door {
    + DoorStateChangedEvent: event
    + SetDoorState(open: bool): void
    + SetDoorLocked(locked: boolean): void
    - OnDoorStateChanged(\n  e: DoorStateEventArgs): void
}

class DoorStateEventArgs {
    + Open: bool
}

interface IRFIDReader {
    + RFIDReadEvent: event
}

class RFIDReader {
    + RFIDReadEvent: event
    + ReadRFID(int: ID): void
    - OnRFIDRead(\n  e: RFIDReadEventArgs): void
}

class RFIDReadEventArgs {
    + ID: int
}

class StationControl {
    - HandleDoorStateChanged(\n  s: Object\n  e: DoorStateEventArgs)
    - HandleRFIDRead(\n  s: Object\n  e: DoorStateEventArgs)
}

interface IUSBCharger {
    + CurrentValueEvent: event
}

class CurrentValueEventArgs {
    + Current: int
}

class USBCharger {
    + CurrentValueEvent: event
    + setCurrent(current: int): void
    - OnCurrentValueChanged(\n  e: CurrentValueEventArgs): void
}

interface IChargeControl {
    
}

class ChargeControl {
    - HandleCurrentValueChanged(\n  s: Object\n  e: CurrentValueEventArgs)
}

interface IDisplay {

}

class Display {

}

interface ILogFile {

}

class LogFile {

}


Door .up.|> IDoor
Door ..> DoorStateEventArgs
IDoor ..> DoorStateEventArgs
StationControl ..> IDoor
RFIDReader .up.|> IRFIDReader
RFIDReader ..> RFIDReadEventArgs
IRFIDReader ..> RFIDReadEventArgs
StationControl ..> IRFIDReader
USBCharger .up.|> IUSBCharger
USBCharger ..> CurrentValueEventArgs
IUSBCharger ..> CurrentValueEventArgs
ChargeControl ..> IUSBCharger
StationControl ..> IChargeControl
ChargeControl .up.|> IChargeControl
LogFile .up.|> ILogFile
StationControl ..> ILogFile
Display .up.|> IDisplay
StationControl ..> IDisplay
ChargeControl ..> IDisplay 
@enduml